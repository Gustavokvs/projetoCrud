/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.LivroController;
import javax.swing.JOptionPane;
import model.Livro;

/**
 *
 * @author gusta
 */
public class FrAltLivro extends javax.swing.JDialog {

    private int id;

    public void setId(int id) {
        this.id = id;
    }

    public FrAltLivro(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        setId(id);
        carregarLivro(); // carrega os dados do livro no form
    }

    public FrAltLivro(java.awt.Dialog parent, boolean modal, Livro livro) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        // Preenche os campos com os dados do livro
        edtIdLivro.setText(String.valueOf(livro.getId()));
        edtTitulo.setText(livro.getTitulo());
        edtIsbn.setText(livro.getIsbn());
        edtPreco.setText(String.valueOf(livro.getPreco()));
        edtAnoPublicacao.setText(String.valueOf(livro.getAnoPublicacao()));
        edtCategoria.setText(String.valueOf(livro.getIdsCategorias()));


        edtAutorId.setText(String.valueOf(livro.getIdAutor()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtIdLivro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbCategoria = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        edtCategoria = new javax.swing.JTextField();
        edtTitulo = new javax.swing.JTextField();
        edtIsbn = new javax.swing.JTextField();
        edtPreco = new javax.swing.JTextField();
        edtAnoPublicacao = new javax.swing.JTextField();
        edtAutorId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Código do livro:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 46, -1, -1));

        edtIdLivro.setEditable(false);
        jPanel1.add(edtIdLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 42, 47, -1));

        jLabel2.setText("Autor ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, -1, -1));

        lbCategoria.setText("Categoria ID");
        jPanel1.add(lbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, -1, -1));

        jLabel5.setText("Título");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jLabel6.setText("ISBN");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        jLabel7.setText("Preço");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabel8.setText("Ano de publicação");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 410, -1, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, -1, -1));

        edtCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(edtCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 110, -1));
        jPanel1.add(edtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 110, -1));
        jPanel1.add(edtIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 170, -1));
        jPanel1.add(edtPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 70, -1));
        jPanel1.add(edtAnoPublicacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 110, -1));
        jPanel1.add(edtAutorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 40, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void edtCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtCategoriaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        salvar();


    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrAltLivro dialog = new FrAltLivro(new javax.swing.JFrame(), true, 1); // Use um ID válido aqui
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void salvar() {
        // Capturar os dados dos campos
        String titulo = edtTitulo.getText().trim();
        String isbn = edtIsbn.getText().trim();
        String precoStr = edtPreco.getText().trim();
        String anoPublicacaoStr = edtAnoPublicacao.getText().trim();
        String categoriaStr = edtCategoria.getText().trim(); // Agora pode ser algo como "1,2"
        String autorIdStr = edtAutorId.getText().trim();

        // Converter os dados para os tipos corretos
        double preco;
        int anoPublicacao, autorId;

        try {
            preco = Double.parseDouble(precoStr);
            anoPublicacao = Integer.parseInt(anoPublicacaoStr);
            autorId = Integer.parseInt(autorIdStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira valores numéricos válidos para preço, ano de publicação e autor.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Criar o objeto Livro com os dados capturados
        Livro livro = new Livro();
        livro.setId(Integer.parseInt(edtIdLivro.getText())); // O ID do livro já está no campo de texto, mesmo que não editável
        livro.setTitulo(titulo);
        livro.setIsbn(isbn);
        livro.setPreco(preco);
        livro.setAnoPublicacao(anoPublicacao);
        livro.setIdAutor(autorId);

        // Processar os IDs das categorias
        String[] categorias = categoriaStr.split(",");
        for (String categoriaIdStr : categorias) {
            try {
                int categoriaId = Integer.parseInt(categoriaIdStr.trim()); // Tenta converter cada ID de categoria
                // Aqui, você pode chamar o método para atualizar o relacionamento (Tabela LivroGenero)
                // Isso pode ser feito no controller ou diretamente no banco
                LivroController controller = new LivroController();
                controller.adicionarCategoriaAoLivro(livro.getId(), categoriaId); // Chamada para método que vai tratar a relação N:N
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "ID de categoria inválido: " + categoriaIdStr, "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Chamar o método de atualização no controller para salvar o livro
        LivroController controller = new LivroController();
        boolean sucesso = controller.atualizar(livro);

        // Exibir mensagens de sucesso ou erro
        if (sucesso) {
            JOptionPane.showMessageDialog(this, "Livro atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); // Fechar a janela de alteração
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar o livro.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean verificarCampos() {
        // Verificar se todos os campos obrigatórios estão preenchidos
        if (edtTitulo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha o título do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (edtIsbn.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha o ISBN do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (edtPreco.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha o preço do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (edtAnoPublicacao.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha o ano de publicação do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (edtCategoria.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha a categoria do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (edtAutorId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha o ID do autor.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Verificar se os campos numéricos são válidos
        try {
            Double.parseDouble(edtPreco.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Preço inválido. Por favor, insira um valor numérico válido para o preço.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        try {
            Integer.parseInt(edtAnoPublicacao.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ano de publicação inválido. Por favor, insira um valor numérico válido para o ano de publicação.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        try {
            Integer.parseInt(edtCategoria.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Categoria inválida. Por favor, insira um valor numérico válido para a categoria.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        try {
            Integer.parseInt(edtAutorId.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID do autor inválido. Por favor, insira um valor numérico válido para o ID do autor.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void carregarLivro() {
        LivroController livroController = new LivroController();
        Livro livro = livroController.buscarPorId(id);

        if (livro != null) {
            edtIdLivro.setText(String.valueOf(livro.getId()));
            edtTitulo.setText(livro.getTitulo());
            edtIsbn.setText(livro.getIsbn());
            edtPreco.setText(String.valueOf(livro.getPreco()));
            edtAnoPublicacao.setText(String.valueOf(livro.getAnoPublicacao()));
           edtCategoria.setText(String.valueOf(livro.getIdsCategorias()));
            edtAutorId.setText(String.valueOf(livro.getIdAutor()));
        } else {
            JOptionPane.showMessageDialog(this, "Livro não encontrado.");
            dispose();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JTextField edtAnoPublicacao;
    private javax.swing.JTextField edtAutorId;
    private javax.swing.JTextField edtCategoria;
    private javax.swing.JTextField edtIdLivro;
    private javax.swing.JTextField edtIsbn;
    private javax.swing.JTextField edtPreco;
    private javax.swing.JTextField edtTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbCategoria;
    // End of variables declaration//GEN-END:variables
}
