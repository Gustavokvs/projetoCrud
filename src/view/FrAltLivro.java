/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.GerenciadorConexao;
import controller.LivroController;
import javax.swing.JOptionPane;
import model.Livro;
import java.util.List;
import java.util.stream.Collectors;
import java.util.Arrays;


/**
 *
 * @author gusta
 */
public class FrAltLivro extends javax.swing.JDialog {

    private int id;

    public void setId(int id) {
        this.id = id;
    }

    public FrAltLivro(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        setId(id);
        carregarLivro(); // carrega os dados do livro no form
    }

    public FrAltLivro(java.awt.Dialog parent, boolean modal, Livro livro) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        // Preenche os campos com os dados do livro
        edtIdLivro.setText(String.valueOf(livro.getId()));
        edtTitulo.setText(livro.getTitulo());
        edtIsbn.setText(livro.getIsbn());
        edtPreco.setText(String.valueOf(livro.getPreco()));
        edtAnoPublicacao.setText(String.valueOf(livro.getAnoPublicacao()));
        edtCategoria.setText(String.valueOf(livro.getIdsCategorias()));


        edtAutorId.setText(String.valueOf(livro.getIdAutor()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtIdLivro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbCategoria = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        edtCategoria = new javax.swing.JTextField();
        edtTitulo = new javax.swing.JTextField();
        edtIsbn = new javax.swing.JTextField();
        edtPreco = new javax.swing.JTextField();
        edtAnoPublicacao = new javax.swing.JTextField();
        edtAutorId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 0));
        jLabel1.setText("Código do livro:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, -1, -1));

        edtIdLivro.setEditable(false);
        jPanel1.add(edtIdLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 47, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 0));
        jLabel2.setText("Autor ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, -1, -1));

        lbCategoria.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbCategoria.setForeground(new java.awt.Color(204, 204, 0));
        lbCategoria.setText("Categoria ID");
        jPanel1.add(lbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 0));
        jLabel5.setText("Título");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 0));
        jLabel6.setText("ISBN");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 0));
        jLabel7.setText("Preço");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 0));
        jLabel8.setText("Ano de publicação");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        btnSalvar.setBackground(new java.awt.Color(255, 255, 153));
        btnSalvar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, -1, 30));

        btnCancelar.setBackground(new java.awt.Color(255, 255, 153));
        btnCancelar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, -1, 30));

        edtCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(edtCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 110, -1));
        jPanel1.add(edtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 170, -1));
        jPanel1.add(edtIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 170, -1));
        jPanel1.add(edtPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 70, -1));
        jPanel1.add(edtAnoPublicacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 110, -1));
        jPanel1.add(edtAutorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 50, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 0));
        jLabel3.setText("Alterar Livro");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void edtCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtCategoriaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        salvar();


    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrAltLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrAltLivro dialog = new FrAltLivro(new javax.swing.JFrame(), true, 1); // Use um ID válido aqui
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

private void salvar() {
    
    if (!verificarCampos()) {
        return; // Se a validação falhar, interrompe o salvamento
    }
    // O re
    // Capturar os dados dos campos
    String titulo = edtTitulo.getText().trim();
    String isbn = edtIsbn.getText().trim();
    String precoStr = edtPreco.getText().trim();
    String anoPublicacaoStr = edtAnoPublicacao.getText().trim();
    String categoriaStr = edtCategoria.getText().trim(); // Agora pode ser algo como "1,2"
    String autorIdStr = edtAutorId.getText().trim();

    // Converter os dados para os tipos corretos
    double preco;
    int anoPublicacao, autorId;

    try {
        preco = Double.parseDouble(precoStr);
        anoPublicacao = Integer.parseInt(anoPublicacaoStr);
        autorId = Integer.parseInt(autorIdStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor, insira valores numéricos válidos para preço, ano de publicação e autor.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Pegar o texto do campo de categorias
    String inputCategorias = categoriaStr; // Já pegamos do campo

    // Converter a entrada em uma lista de inteiros
    List<Integer> novaListaDeCategorias = Arrays.stream(inputCategorias.split(","))
        .map(String::trim) // Remover espaços antes ou depois dos números
        .map(Integer::parseInt) // Converter para Integer
        .collect(Collectors.toList()); // Coletar em uma lista

    // Criar o objeto Livro com os dados capturados
    Livro livro = new Livro();
    livro.setId(Integer.parseInt(edtIdLivro.getText())); // O ID do livro já está no campo de texto, mesmo que não editável
    livro.setTitulo(titulo);
    livro.setIsbn(isbn);
    livro.setPreco(preco);
    livro.setAnoPublicacao(anoPublicacao);
    livro.setIdAutor(autorId);
    livro.setIdsCategorias(novaListaDeCategorias); // A lista de categorias foi capturada e convertida

    // Chamar o método de atualização no controller para salvar o livro
    LivroController controller = new LivroController();
    boolean sucesso = controller.atualizar(livro);

    // Exibir mensagens de sucesso ou erro
    if (sucesso) {
        JOptionPane.showMessageDialog(this, "Livro atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        this.dispose(); // Fechar a janela de alteração
    } else {
        JOptionPane.showMessageDialog(this, "Erro ao atualizar o livro.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

private boolean verificarCampos() {
    // Verificar se todos os campos obrigatórios estão preenchidos
    if (edtTitulo.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha o título do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (edtIsbn.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha o ISBN do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (edtPreco.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha o preço do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (edtAnoPublicacao.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha o ano de publicação do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (edtCategoria.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha a categoria do livro.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    if (edtAutorId.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha o ID do autor.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    // Verificar se os campos numéricos são válidos
    try {
        Double.parseDouble(edtPreco.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Preço inválido. Por favor, insira um valor numérico válido para o preço.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    try {
        Integer.parseInt(edtAnoPublicacao.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ano de publicação inválido. Por favor, insira um valor numérico válido para o ano de publicação.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    // Validar as categorias - se o campo não for vazio, deve ser um número válido (ou lista de números separados por vírgula)
    String categorias = edtCategoria.getText().trim();
    String[] categoriaArray = categorias.split(",");
    for (String categoria : categoriaArray) {
        try {
            Integer.parseInt(categoria.trim()); // Tenta converter cada item separado por vírgula
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Categoria inválida. Por favor, insira um valor numérico válido para a categoria.", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    try {
        Integer.parseInt(edtAutorId.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID do autor inválido. Por favor, insira um valor numérico válido para o ID do autor.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    return true;
}

    private void carregarLivro() {
    LivroController livroController = new LivroController();
    Livro livro = livroController.buscarPorId(id);

    if (livro != null) {
        edtIdLivro.setText(String.valueOf(livro.getId()));
        edtTitulo.setText(livro.getTitulo());
        edtIsbn.setText(livro.getIsbn());
        edtPreco.setText(String.valueOf(livro.getPreco()));
        edtAnoPublicacao.setText(String.valueOf(livro.getAnoPublicacao()));
        
        // Converter a lista de categorias em um formato "id1,id2,..."
        String categorias = livro.getIdsCategorias().stream()
                                 .map(String::valueOf)
                                 .collect(Collectors.joining(","));
        edtCategoria.setText(categorias);  // Preencher o campo com os IDs das categorias
        
        edtAutorId.setText(String.valueOf(livro.getIdAutor()));
    } else {
        JOptionPane.showMessageDialog(this, "Livro não encontrado.");
        dispose();
    }
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JTextField edtAnoPublicacao;
    private javax.swing.JTextField edtAutorId;
    private javax.swing.JTextField edtCategoria;
    private javax.swing.JTextField edtIdLivro;
    private javax.swing.JTextField edtIsbn;
    private javax.swing.JTextField edtPreco;
    private javax.swing.JTextField edtTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbCategoria;
    // End of variables declaration//GEN-END:variables
}
