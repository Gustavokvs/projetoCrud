/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.VendaController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import model.Venda;
import model.Cliente;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import model.Livro;
import controller.ClienteController;
import controller.GerenciadorConexao;
import controller.LivroController;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import java.time.LocalDate;

/**
 *
 * @author thain
 */
public class FrCadVenda extends javax.swing.JDialog {

    private List<Livro> livrosComQuantidade = new ArrayList<>();

    /**
     * Creates new form FrCadVenda
     */
    public FrCadVenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    VendaController controller = new VendaController();
    ClienteController cliente = new ClienteController();
    Venda venda = new Venda();
    Cliente cl = new Cliente();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblLivro = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        lblDataVenda = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        edtLivro = new javax.swing.JTextField();
        edtCliente = new javax.swing.JTextField();
        edtQuantidade = new javax.swing.JTextField();
        edtDataVenda = new javax.swing.JFormattedTextField();
        btnVoltar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(204, 204, 0));
        lblTitulo.setText("Cadastro de venda");
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, -1));

        lblLivro.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblLivro.setForeground(new java.awt.Color(204, 204, 0));
        lblLivro.setText("Livro");
        jPanel1.add(lblLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        lblCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblCliente.setForeground(new java.awt.Color(204, 204, 0));
        lblCliente.setText("Cliente");
        jPanel1.add(lblCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        lblDataVenda.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDataVenda.setForeground(new java.awt.Color(204, 204, 0));
        lblDataVenda.setText("Data");
        jPanel1.add(lblDataVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        lblQuantidade.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQuantidade.setForeground(new java.awt.Color(204, 204, 0));
        lblQuantidade.setText("Quantidade");
        jPanel1.add(lblQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));
        jPanel1.add(edtLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 120, -1));
        jPanel1.add(edtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 120, -1));
        jPanel1.add(edtQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 120, -1));

        edtDataVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jPanel1.add(edtDataVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 120, -1));

        btnVoltar.setBackground(new java.awt.Color(255, 255, 153));
        btnVoltar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnVoltar.setBorderPainted(false);
        btnVoltar.setContentAreaFilled(false);
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.setFocusPainted(false);
        btnVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVoltarMouseClicked(evt);
            }
        });
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jPanel1.add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 120, 40));

        btnSalvar.setBackground(new java.awt.Color(255, 255, 153));
        btnSalvar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSalvar.setBorderPainted(false);
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvar.setFocusPainted(false);
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 120, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fundo_logo.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 60, 400, 350));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botao_salvar.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 120, 40));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/botao_voltar.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 130, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnVoltarMouseClicked

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        if (verificarCampos()) {
            gravar();
        }
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (verificarCampos()) {
            gravar();
        }
        limparCampos();;
    }//GEN-LAST:event_btnSalvarActionPerformed

// Adicionando livros e quantidades
// Correção de 'Livro' e 'quantidade'
    public void gravar() {
        // Criação de uma nova venda
        Venda venda = new Venda();

        // Buscar o cliente
        int idCliente = Integer.parseInt(edtCliente.getText());
        Cliente clienteBuscado = cliente.buscarPorId(idCliente);
        if (clienteBuscado == null) {
            JOptionPane.showMessageDialog(null, "Cliente não encontrado.");
            return;
        }
        venda.setCliente(clienteBuscado);

        // Processando a data da venda
        String dataVendaStr = edtDataVenda.getText();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy"); // Ajuste conforme o formato da sua data
        LocalDate dataVenda = null;

        try {
            dataVenda = LocalDate.parse(dataVendaStr, formatter);
            venda.setDataVenda(dataVenda); // Supondo que você tenha um setter para dataVenda na classe Venda
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de data inválido.");
            return;
        }

        // Processando os livros e suas quantidades
        String idsLivrosStr = edtLivro.getText();
        String[] idsLivros = idsLivrosStr.split(",");

        List<Livro> livrosDaVenda = new ArrayList<>();
        double valorTotal = 0;

        // Adicionando livros
        for (String idLivroStr : idsLivros) {
            try {
                int idLivro = Integer.parseInt(idLivroStr.trim());

                LivroController livroCtrl = new LivroController();
                Livro livroBuscado = livroCtrl.buscarPorId(idLivro);
                if (livroBuscado == null) {
                    JOptionPane.showMessageDialog(null, "Erro: Livro não encontrado.");
                    return;
                }

                valorTotal += livroBuscado.getPreco();
                livrosDaVenda.add(livroBuscado);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Erro: ID do livro inválido.");
                return;
            }
        }

        // Pegar a quantidade inserida pelo usuário
        String quantidadeStr = edtQuantidade.getText();
        int quantidade = 0;

        try {
            quantidade = Integer.parseInt(quantidadeStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Quantidade inválida.");
            return;
        }

        // Associando livros e suas quantidades
        Map<Livro, Integer> livrosMap = new HashMap<>();
        for (Livro livro : livrosDaVenda) {
            livrosMap.put(livro, quantidade); // Definindo a quantidade de cada livro
        }
        venda.setLivrosVendidos(livrosMap);

        // Gravando a venda
        try {
            controller.registrarVenda(venda);
            JOptionPane.showMessageDialog(this, "Venda registrada com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao registrar venda: " + e.getMessage());
        }
    }

    public void limparCampos() {
        edtCliente.setText("");
        edtDataVenda.setText("");
        edtLivro.setText("");
        edtQuantidade.setText("");
        edtCliente.requestFocus(); // volta o cursor pro primeiro campo
    }

    public boolean verificarCampos() {

        if (edtLivro.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Livro com o ID.");
            edtLivro.requestFocus();
            return false;
        }

        if (edtCliente.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Cliente com o ID.");
            edtCliente.requestFocus();
            return false;
        }

        if (edtQuantidade.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Quantidade.");
            edtQuantidade.requestFocus();
            return false;
        }

        if (edtDataVenda.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo Data da Venda.");
            edtDataVenda.requestFocus();
            return false;
        }

        return true;
    }

    //e no campo quantidade posso colocar a quantidade de cada um dos livros? Como
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrCadVenda dialog = new FrCadVenda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JTextField edtCliente;
    private javax.swing.JFormattedTextField edtDataVenda;
    private javax.swing.JTextField edtLivro;
    private javax.swing.JTextField edtQuantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblDataVenda;
    private javax.swing.JLabel lblLivro;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
