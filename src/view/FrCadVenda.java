/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.VendaController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import model.Venda;
import model.Cliente;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import model.Livro;
import controller.ClienteController;
import controller.GerenciadorConexao;
import controller.LivroController;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import java.time.LocalDate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author thain
 */
public class FrCadVenda extends javax.swing.JDialog {

    private List<JComboBox<?>[]> livrosComQuantidade = new ArrayList<>();

    /**
     * Creates new form FrCadVenda
     */
    public FrCadVenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        preencherComboBoxLivros();
        preencherComboBoxQuantidades(); // <- aqui
        preencherComboBoxClientes();
    }

    VendaController controller = new VendaController();
    ClienteController cliente = new ClienteController();
    Venda venda = new Venda();
    Cliente cl = new Cliente();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblDataVenda = new javax.swing.JLabel();
        edtDataVenda = new javax.swing.JFormattedTextField();
        btnVoltar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        ComLivro = new javax.swing.JComboBox<>();
        ComQuant = new javax.swing.JComboBox<>();
        btnAddLivro = new javax.swing.JButton();
        ComClientes = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setText("Dados de venda");
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 27, -1, -1));

        lblDataVenda.setText("Data");
        jPanel1.add(lblDataVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        edtDataVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jPanel1.add(edtDataVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 90, -1));

        btnVoltar.setText("Voltar");
        btnVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVoltarMouseClicked(evt);
            }
        });
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jPanel1.add(btnVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, -1, -1));

        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 430, -1, -1));

        ComLivro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(ComLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        ComQuant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComQuant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComQuantActionPerformed(evt);
            }
        });
        jPanel1.add(ComQuant, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, -1));

        btnAddLivro.setText("Adicionar Livro");
        btnAddLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLivroActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, -1, -1));

        ComClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComClientesActionPerformed(evt);
            }
        });
        jPanel1.add(ComClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnVoltarMouseClicked

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        if (verificarCampos()) {
            gravar();
        }
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (verificarCampos()) {
            gravar();
        }
        limparCampos();;
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void ComQuantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComQuantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComQuantActionPerformed

    private void btnAddLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLivroActionPerformed

        adicionarComboDinamico();
    }//GEN-LAST:event_btnAddLivroActionPerformed

    private void ComClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComClientesActionPerformed

private void adicionarComboDinamico() {
    JComboBox<String> novoComLivro = new JComboBox<>();
    JComboBox<String> novoComQuant = new JComboBox<>();

    // Preencher livros
    LivroController livroController = new LivroController();
    List<Livro> livros = livroController.listarTodos();
    DefaultComboBoxModel<String> modelLivro = new DefaultComboBoxModel<>();
    for (Livro livro : livros) {
        modelLivro.addElement(livro.getTitulo());
    }
    novoComLivro.setModel(modelLivro);

    // Quantidades
    String[] quantidades = new String[10];
    for (int i = 0; i < 10; i++) {
        quantidades[i] = String.valueOf(i + 1);
    }
    novoComQuant.setModel(new DefaultComboBoxModel<>(quantidades));

    // Alinhamento com o ComLivro existente
    int xLivro = 190;      // mesma posição de ComLivro
    int xQuant = 350;      // posiciona o ComQuant ao lado (ajuste se necessário)
    int baseY = 130;       // Y do primeiro combo
    int yOffset = (livrosComQuantidade.size() + 1) * 40;  // pula o primeiro fixo, começa abaixo

    jPanel1.add(novoComLivro, new org.netbeans.lib.awtextra.AbsoluteConstraints(xLivro, baseY + yOffset, 140, -1));
    jPanel1.add(novoComQuant, new org.netbeans.lib.awtextra.AbsoluteConstraints(xQuant, baseY + yOffset, 80, -1));

    livrosComQuantidade.add(new JComboBox[]{novoComLivro, novoComQuant});

    jPanel1.revalidate();
    jPanel1.repaint();
}

    public class LivroQuant {

        private JComboBox novoComLivro;
        private JComboBox novoComQuant;

        public LivroQuant(JComboBox novoComLivro, JComboBox novoComQuant) {
            this.novoComLivro = novoComLivro;
            this.novoComQuant = novoComQuant;
        }

        public JComboBox getNovoComLivro() {
            return novoComLivro;
        }

        public JComboBox getNovoComQuant() {
            return novoComQuant;
        }
    }

    private void preencherComboBoxLivros() {
        LivroController livroController = new LivroController();
        List<Livro> livros = livroController.listarTodos();

        // Criando três modelos independentes
        DefaultComboBoxModel<String> model1 = new DefaultComboBoxModel<>();
        DefaultComboBoxModel<String> model2 = new DefaultComboBoxModel<>();
        DefaultComboBoxModel<String> model3 = new DefaultComboBoxModel<>();

        for (Livro livro : livros) {
            String titulo = livro.getTitulo();
            model1.addElement(titulo);
            model2.addElement(titulo);
            model3.addElement(titulo);
        }

        ComLivro.setModel(model1);

    }

    private void preencherComboBoxQuantidades() {
        // Criar os valores de 1 a 10 como array
        String[] itens = new String[10];
        for (int i = 0; i < 10; i++) {
            itens[i] = String.valueOf(i + 1);
        }

        // Criar modelos separados para cada JComboBox
        ComQuant.setModel(new DefaultComboBoxModel<>(itens.clone()));

    }

    private void preencherComboBoxClientes() {
        ClienteController clienteController = new ClienteController(); // Controller para acessar os clientes
        List<Cliente> clientes = clienteController.listarTodos(); // Método que retorna todos os clientes do banco

        DefaultComboBoxModel<String> modelClientes = new DefaultComboBoxModel<>(); // Modelo para a ComboBox
        for (Cliente cliente : clientes) {
            modelClientes.addElement(cliente.getNome()); // Adiciona o nome de cada cliente na ComboBox
        }

        ComClientes.setModel(modelClientes); // Define o modelo para a ComboBox
    }

// Adicionando livros e quantidades
// Correção de 'Livro' e 'quantidade'
    private void gravar() {
        Venda venda = new Venda();

        try {
            // Busca do cliente
            String nomeClienteSelecionado = (String) ComClientes.getSelectedItem();
            ArrayList<Cliente> clientesBuscados = cliente.buscarPorNome(nomeClienteSelecionado);
            if (clientesBuscados != null && !clientesBuscados.isEmpty()) {
                Cliente clienteBuscado = clientesBuscados.get(0);
                venda.setCliente(clienteBuscado);
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado.");
                return;
            }

            // Formatação e validação da data
            String dataVendaStr = edtDataVenda.getText();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataVenda = LocalDate.parse(dataVendaStr, formatter);
            venda.setDataVenda(dataVenda);

        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(null, "Data inválida. Use o formato dd/MM/yyyy.");
            return;
        }

        // Mapeamento dos livros e quantidades
        Map<Livro, Integer> livrosVendidos = new HashMap<>();
        LivroController livroController = new LivroController();

        // Adicionando o livro principal (se houver)
        String tituloLivroPrincipal = (String) ComLivro.getSelectedItem();
        Livro livroPrincipal = livroController.buscarPorTitulo(tituloLivroPrincipal);
        int quantidadePrincipal = Integer.parseInt((String) ComQuant.getSelectedItem());

        if (livroPrincipal != null && quantidadePrincipal > 0) {
            livrosVendidos.put(livroPrincipal, quantidadePrincipal);
        }

        // Adicionando os outros livros e suas quantidades
        for (JComboBox<?>[] par : livrosComQuantidade) {
            JComboBox<?> comboLivro = par[0];
            JComboBox<?> comboQuant = par[1];

            String titulo = (String) comboLivro.getSelectedItem();
            Livro livro = livroController.buscarPorTitulo(titulo);
            int quant = Integer.parseInt((String) comboQuant.getSelectedItem());

            if (livro != null && quant > 0) {
                livrosVendidos.put(livro, quant);
            }
        }

        // Definindo os livros vendidos na venda
        venda.setLivrosVendidos(livrosVendidos);

        // Tentando registrar a venda
        try {
            controller.registrarVenda(venda);
            JOptionPane.showMessageDialog(null, "Venda registrada com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao registrar venda.");
        }
    }

    private void adicionarLivroQuantidade(JComboBox<String> comboLivro, JComboBox<String> comboQuant, Map<Livro, Integer> mapa, LivroController controller) {
        String tituloSelecionado = (String) comboLivro.getSelectedItem();
        int quantidade = Integer.parseInt((String) comboQuant.getSelectedItem());

        Livro livro = controller.buscarPorTitulo(tituloSelecionado);
        if (livro != null && quantidade > 0) {
            mapa.put(livro, quantidade); // Adiciona o livro e sua quantidade ao mapa
        }
    }

    private void limparCampos() {
        edtDataVenda.setText("");
        ComLivro.setSelectedIndex(0);

        ComQuant.setSelectedIndex(0);

    }

    private boolean verificarCampos() {

        if (edtDataVenda.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Informe a data da venda.");
            return false;
        }

        return true;
    }

    //e no campo quantidade posso colocar a quantidade de cada um dos livros? Como
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrCadVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrCadVenda dialog = new FrCadVenda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComClientes;
    private javax.swing.JComboBox<String> ComLivro;
    private javax.swing.JComboBox<String> ComQuant;
    private javax.swing.JButton btnAddLivro;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField edtDataVenda;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDataVenda;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
